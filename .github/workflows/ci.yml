name: CI

on: [push]

defaults:
  run:
    shell: bash

env:
  DYNAWO_VERSION: 1.6.0

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: dynawo/dynawo-ci:latest
    env:
      DYNAFLOW_LAUNCHER_BUILD_TYPE: Debug
      DYNAFLOW_LAUNCHER_PROCESSORS_USED: 2
      DYNAFLOW_LAUNCHER_FORCE_CXX11_ABI: "true"
      DYNAFLOW_LAUNCHER_LOCALE: "en_GB"
      DYNAFLOW_LAUNCHER_USE_DOXYGEN: "OFF"
      DYNAFLOW_LAUNCHER_BUILD_TESTS: "OFF"
      GH_API: ${{ github.api_url }}/repos/${{ github.repository }}
      GH_API_DYNAWO: ${{ github.api_url }}/repos/${{ github.repository_owner }}/dynawo
      GH_API_DYNAWO_ALGORITHMS: ${{ github.api_url }}/repos/${{ github.repository_owner }}/dynawo-algorithms
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CURL_JSON: 'curl --silent -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --header "Content-Type: application/json"'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Fetch Dynawo and Dynawo algorithms
        run: |
          source .github/workflows/tools.sh

          download_asset $GH_API_DYNAWO nightly Dynawo_headers_v${DYNAWO_VERSION}.zip $GITHUB_TOKEN
          download_asset $GH_API_DYNAWO_ALGORITHMS nightly DynawoAlgorithms_headers_v${DYNAWO_VERSION}.zip $GITHUB_TOKEN

      - name: Unzip Dynawo and Dynawo algorithms
        run: |
          unzip -qq "Dynawo_headers_v${DYNAWO_VERSION}.zip"
          unzip -qq "DynawoAlgorithms_headers_v${DYNAWO_VERSION}.zip"

      - name: Dynawo and Dynawo algorithms versions
        run: |
          ./dynawo/dynawo.sh version
          ./dynawo-algorithms/dynawo-algorithms.sh --version

      - name: Build
        run: |
          source /etc/profile.d/00-modulepath.sh
          source /etc/profile.d/modules.sh
          source /usr/share/lmod/lmod/init/bash
          module load mpi/mpich-x86_64
          export DYNAWO_HOME=$(pwd)/dynawo
          export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo-algorithms
          export DYNAFLOW_LAUNCHER_HOME=$(pwd)
          scripts/envDFL.sh build-user

  coverage:
    runs-on: ubuntu-latest
    container: dynawo/dynawo-ci:latest
    env:
      DYNAFLOW_LAUNCHER_BUILD_TYPE: Debug
      DYNAFLOW_LAUNCHER_PROCESSORS_USED: 2
      DYNAFLOW_LAUNCHER_FORCE_CXX11_ABI: "true"
      DYNAFLOW_LAUNCHER_LOCALE: "en_GB"
      DYNAFLOW_LAUNCHER_USE_DOXYGEN: "OFF"
      DYNAFLOW_LAUNCHER_BUILD_TESTS: "ON"
      DYNAFLOW_LAUNCHER_BROWSER_SHOW: "false"
      GH_API: ${{ github.api_url }}/repos/${{ github.repository }}
      GH_API_DYNAWO: ${{ github.api_url }}/repos/${{ github.repository_owner }}/dynawo
      GH_API_DYNAWO_ALGORITHMS: ${{ github.api_url }}/repos/${{ github.repository_owner }}/dynawo-algorithms
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CURL_JSON: 'curl --silent -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --header "Content-Type: application/json"'
    steps:
      - name: Install Sonar wrapper
        working-directory: ${{ runner.workspace }}
        env:
          CONTAINER_WORKSPACE: ${{ runner.workspace }}
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip

      - name: Install Sonar scanner
        working-directory: ${{ runner.workspace }}
        env:
          SONAR_SCANNER_VERSION: 4.6.0.2311
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          ln -s sonar-scanner-${SONAR_SCANNER_VERSION} sonar
          rm sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          dnf install -y java-11-openjdk

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Fetch Dynawo and Dynawo algorithms
        run: |
          source .github/workflows/tools.sh

          download_asset $GH_API_DYNAWO nightly Dynawo_headers_v${DYNAWO_VERSION}.zip $GITHUB_TOKEN
          download_asset $GH_API_DYNAWO_ALGORITHMS nightly DynawoAlgorithms_headers_v${DYNAWO_VERSION}.zip $GITHUB_TOKEN

      - name: Unzip Dynawo and Dynawo algorithms
        run: |
          unzip -qq "Dynawo_headers_v${DYNAWO_VERSION}.zip"
          unzip -qq "DynawoAlgorithms_headers_v${DYNAWO_VERSION}.zip"

      - name: Build
        env:
          CONTAINER_WORKSPACE: ${{ runner.workspace }}
        run: |
          source /etc/profile.d/00-modulepath.sh
          source /etc/profile.d/modules.sh
          source /usr/share/lmod/lmod/init/bash
          module load mpi/mpich-x86_64
          export DYNAWO_HOME=$(pwd)/dynawo
          export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo-algorithms
          export DYNAFLOW_LAUNCHER_HOME=$(pwd)
          $CONTAINER_WORKSPACE/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output scripts/envDFL.sh build-tests-coverage

      - name: Sonarcloud
        working-directory: ${{ runner.workspace }}/dynaflow-launcher
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          CONTAINER_WORKSPACE: ${{ runner.workspace }}
        run: $CONTAINER_WORKSPACE/sonar/bin/sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.cfamily.threads=2

  build-windows:
    runs-on: windows-2019
    steps:
      - name: No LF to CRLF conversion
        shell: cmd
        run: git config --global core.autocrlf input

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Download MS-MPI
        shell: bash
        run: |
          curl -Os https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi
          curl -Os https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe

      - name: Install MS-MPI
        shell: cmd
        run: |
          msmpisdk.msi /passive
          msmpisetup.exe /unattend

      - name: Fetch Dynawo
        shell: bash
        run: curl -LOs https://github.com/dynawo/dynawo/releases/download/nightly/Dynawo_Windows_v$DYNAWO_VERSION.zip

      - name: Unzip Dynawo
        shell: cmd
        run: 7z x Dynawo_Windows_v%DYNAWO_VERSION%.zip -o..\deploy

      - name: Dynawo version
        shell: cmd
        run: ..\deploy\dynawo\dynawo version

      - name: Fetch Dynawo-Algorithms
        shell: bash
        run: curl -LOs https://github.com/dynawo/dynawo-algorithms/releases/download/nightly/DynawoAlgorithms_Windows_v$DYNAWO_VERSION.zip

      - name: Unzip Dynawo-Algorithms
        shell: cmd
        run: 7z x DynawoAlgorithms_Windows_v%DYNAWO_VERSION%.zip -o..\deploy

      - name: Dynawo-Algorithms version
        shell: cmd
        run: ..\deploy\dynawo-algorithms\dynawo-algorithms version

      # use a minimal PATH to avoid too long command lines and conflict with Strawberry pkg-config !
      - name: Build and install
        shell: cmd
        env:
          MSMPI_INC: C:\Program Files (x86)\Microsoft SDKs\MPI\Include\
          MSMPI_LIB32: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x86\
          MSMPI_LIB64: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\
          MSMPI_BIN: C:\Program Files\Microsoft MPI\Bin\
          PATH: C:\Windows\system32;C:\Program Files\Git\cmd;C:\hostedtoolcache\windows\Python\3.7.9\x64
        run: |
          set PATH=%MSMPI_BIN%;%PATH%
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call scripts\dynaflow-launcher verbose build

      - name: Dynaflow-Launcher version
        shell: cmd
        env:
          PATH: C:\Windows\system32;C:\Program Files\Git\cmd;C:\hostedtoolcache\windows\Python\3.7.9\x64
        run: call ..\dfl-i\dynaflow-launcher verbose version

      - name: Build and run unit tests
        shell: cmd
        env:
          MSMPI_INC: C:\Program Files (x86)\Microsoft SDKs\MPI\Include\
          MSMPI_LIB32: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x86\
          MSMPI_LIB64: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\
          MSMPI_BIN: C:\Program Files\Microsoft MPI\Bin\
          PATH: C:\Windows\system32;C:\Program Files\Git\cmd;C:\hostedtoolcache\windows\Python\3.7.9\x64
        run: |
          set PATH=%MSMPI_BIN%;%PATH%
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call scripts\dynaflow-launcher verbose tests "^^[^^M]"
