name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release-id:
        description: ID of the published release
        type: string
        required: true
      perform-linux-cxx11:
        description: Create assets for Linux cxx11
        type: boolean
        default: true
      perform-linux-centos7:
        description: Create assets for Linux centos7
        type: boolean
        default: true
      perform-windows:
        description: Create assets for Windows
        type: boolean
        default: true

env:
  DYNAWO_VERSION: 1.7.0

jobs:
  distribution-cxx11:
    if: github.event_name != 'workflow_dispatch' || inputs.perform-linux-cxx11
    name: Distribution Linux cxx11
    runs-on: ubuntu-latest
    env:
      DYNAFLOW_LAUNCHER_BUILD_TYPE: Release
      DYNAFLOW_LAUNCHER_PROCESSORS_USED: 2
      DYNAFLOW_LAUNCHER_FORCE_CXX11_ABI: "true"
      DYNAFLOW_LAUNCHER_LOCALE: "en_GB"
      DYNAFLOW_LAUNCHER_USE_DOXYGEN: "OFF"
      DYNAFLOW_LAUNCHER_BUILD_TESTS: "OFF"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Fetch Dynawo and Dynawo-algorithms
        run: |
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo/releases/download/v$DYNAWO_VERSION/Dynawo_Linux_v$DYNAWO_VERSION.zip
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo-algorithms/releases/download/v$DYNAWO_VERSION/DynawoAlgorithms_Linux_headers_v$DYNAWO_VERSION.zip

      - name: Unzip Dynawo and Dynawo-algorithms
        run: |
          unzip -qq "Dynawo_Linux_v${DYNAWO_VERSION}.zip"
          unzip -qq "DynawoAlgorithms_Linux_headers_v${DYNAWO_VERSION}.zip"

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: dynawo/dynawo-distribution-cxx11:latest
          options: -v ${{ github.workspace }}:/dynaflow-launcher -e DYNAFLOW_LAUNCHER_BUILD_TYPE -e DYNAFLOW_LAUNCHER_PROCESSORS_USED -e DYNAFLOW_LAUNCHER_FORCE_CXX11_ABI -e DYNAFLOW_LAUNCHER_LOCALE -e DYNAFLOW_LAUNCHER_USE_DOXYGEN -e DYNAFLOW_LAUNCHER_BUILD_TESTS
          shell: bash
          run: |
            cd /dynaflow-launcher
            export DYNAWO_HOME=$(pwd)/dynawo
            export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo-algorithms
            export DYNAFLOW_LAUNCHER_HOME=$(pwd)
            export DYNAFLOW_LAUNCHER_INSTALL_DIR=$DYNAFLOW_LAUNCHER_HOME/dynaflow-launcher
            scripts/envDFL.sh build-user
            version=$(scripts/envDFL.sh version 2>&1 | cut -f1 -d' ')
            zip -r DynaFlowLauncher_Linux_v${version}.zip dynaflow-launcher

      - name: Fetch release script
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/dynawo
          sparse-checkout: .github/release.js
          sparse-checkout-cone-mode: false
          path: dynawo

      - name: Upload assets
        uses: actions/github-script@v7
        env:
          release_id: ${{ github.event_name != 'workflow_dispatch' && github.event.release.id || inputs.release-id }}
          files: |
            DynaFlowLauncher_*.zip
        with:
          retries: 3
          script: |
            const release = require('./dynawo/.github/release.js')
            await release({github, context, core, glob})

  distribution-centos7:
    if: github.event_name != 'workflow_dispatch' || inputs.perform-linux-centos7
    name: Distribution Linux centos7
    runs-on: ubuntu-latest
    env:
      DYNAFLOW_LAUNCHER_BUILD_TYPE: Release
      DYNAFLOW_LAUNCHER_PROCESSORS_USED: 2
      DYNAFLOW_LAUNCHER_LOCALE: "en_GB"
      DYNAFLOW_LAUNCHER_USE_DOXYGEN: "OFF"
      DYNAFLOW_LAUNCHER_BUILD_TESTS: "OFF"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Fetch Dynawo and Dynawo Algorithms
        run: |
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo/releases/download/v$DYNAWO_VERSION/Dynawo_Linux_centos7_v$DYNAWO_VERSION.zip
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo-algorithms/releases/download/v$DYNAWO_VERSION/DynawoAlgorithms_Linux_headers_centos7_v$DYNAWO_VERSION.zip

      - name: Unzip Dynawo and Dynawo algorithms
        run: |
          unzip -qq "Dynawo_Linux_centos7_v${DYNAWO_VERSION}.zip"
          unzip -qq "DynawoAlgorithms_Linux_headers_centos7_v${DYNAWO_VERSION}.zip"

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: dynawo/dynawo-distribution-centos7:latest
          options: -v ${{ github.workspace }}:/dynaflow-launcher -e DYNAFLOW_LAUNCHER_BUILD_TYPE -e DYNAFLOW_LAUNCHER_PROCESSORS_USED -e DYNAFLOW_LAUNCHER_LOCALE -e DYNAFLOW_LAUNCHER_USE_DOXYGEN -e DYNAFLOW_LAUNCHER_BUILD_TESTS
          shell: bash
          run: |
            cd /dynaflow-launcher
            export DYNAWO_HOME=$(pwd)/dynawo
            export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo-algorithms
            export DYNAFLOW_LAUNCHER_HOME=$(pwd)
            export DYNAFLOW_LAUNCHER_INSTALL_DIR=$DYNAFLOW_LAUNCHER_HOME/dynaflow-launcher
            scripts/envDFL.sh build-user
            version=$(scripts/envDFL.sh version 2>&1 | cut -f1 -d' ')
            zip -r DynaFlowLauncher_Linux_centos7_v${version}.zip dynaflow-launcher

      - name: Fetch release script
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/dynawo
          sparse-checkout: .github/release.js
          sparse-checkout-cone-mode: false
          path: dynawo

      - name: Upload assets
        uses: actions/github-script@v7
        env:
          release_id: ${{ github.event_name != 'workflow_dispatch' && github.event.release.id || inputs.release-id }}
          files: |
            DynaFlowLauncher_*.zip
        with:
          retries: 3
          script: |
            const release = require('./dynawo/.github/release.js')
            await release({github, context, core, glob})

  distribution-windows:
    if: github.event_name != 'workflow_dispatch' || inputs.perform-windows
    name: Distribution Windows
    runs-on: windows-2019
    steps:
      - name: No LF to CRLF conversion
        shell: cmd
        run: git config --global core.autocrlf input

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download MS-MPI
        shell: bash
        run: |
          curl -Os https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi
          curl -Os https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe

      - name: Install MS-MPI
        shell: cmd
        run: |
          msmpisdk.msi /passive
          msmpisetup.exe /unattend

      - name: Fetch Dynawo and Dynawo Algorithms
        shell: bash
        run: |
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo/releases/download/v$DYNAWO_VERSION/Dynawo_Windows_v$DYNAWO_VERSION.zip
          curl -LOs https://github.com/${{ github.repository_owner }}/dynawo-algorithms/releases/download/v$DYNAWO_VERSION/DynawoAlgorithms_Windows_v$DYNAWO_VERSION.zip

      - name: Unzip Dynawo
        shell: cmd
        run: |
          7z x Dynawo_Windows_v%DYNAWO_VERSION%.zip -o..\deploy
          7z x DynawoAlgorithms_Windows_v%DYNAWO_VERSION%.zip -o..\deploy

      # use a minimal PATH to avoid too long command lines and conflict with Strawberry pkg-config !
      - name: Build and install
        shell: cmd
        env:
          MSMPI_INC: C:\Program Files (x86)\Microsoft SDKs\MPI\Include\
          MSMPI_LIB32: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x86\
          MSMPI_LIB64: C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\
          MSMPI_BIN: C:\Program Files\Microsoft MPI\Bin\
          PATH: C:\Windows\system32;C:\Program Files\Git\cmd;C:\hostedtoolcache\windows\Python\3.7.9\x64
        run: |
          set PATH=%MSMPI_BIN%;%PATH%
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call scripts\dynaflow-launcher verbose build || exit /b 1

      - name: Create distribution
        shell: cmd
        run: |
          md distrib
          cd distrib
          move /y ..\..\dfl-i dynaflow-launcher
          7z a DynaFlowLauncher_Windows_v%DYNAWO_VERSION%.zip dynaflow-launcher

      - name: Fetch release script
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/dynawo
          sparse-checkout: .github/release.js
          sparse-checkout-cone-mode: false
          path: dynawo

      - name: Upload assets
        uses: actions/github-script@v7
        env:
          release_id: ${{ github.event_name != 'workflow_dispatch' && github.event.release.id || inputs.release-id }}
          files: |
            distrib/DynaFlowLauncher_*.zip
        with:
          retries: 3
          script: |
            const release = require('./dynawo/.github/release.js')
            await release({github, context, core, glob})
